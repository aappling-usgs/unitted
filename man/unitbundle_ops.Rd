% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/02-unitbundle.R
\docType{methods}
\name{unitbundle_Ops}
\alias{Ops,ANY,unitbundle-method}
\alias{Ops,list,unitbundle-method}
\alias{Ops,unitbundle,ANY-method}
\alias{Ops,unitbundle,list-method}
\alias{unitbundle_Ops}
\title{Operations combining unitbundles and non-unitbundles}
\usage{
\S4method{Ops}{unitbundle,ANY}(e1, e2)

\S4method{Ops}{ANY,unitbundle}(e1, e2)

\S4method{Ops}{unitbundle,list}(e1, e2)

\S4method{Ops}{list,unitbundle}(e1, e2)
}
\arguments{
\item{e1}{the first unitbundle (or other)}

\item{e2}{the second unitbundle (or other)}
}
\description{
Arithmetic and comparison operations can sometimes be done on a unitbundle 
and an object of another type. This is most important for raising a 
unitbundle e1 to a power e2, which actually \emph{requires} that e2 be a 
number, not a unitbundle. Another useful feature of unitbundle operations is 
that operation on a unitbundle and a list is conducted elementwise over the 
entire list. See \strong{Details | Operations combining unitbundles and 
non-unitbundles}.
}
\details{
\subsection{Operations combining unitbundles and non-unitbundles}{

\describe{

\item{\code{Ops(e1,e2)} - default}{In general, if one of e1 and e2 is a
unitbundle and the other is not, the non-unitbundle is replaced by an empty
unitbundle and the operation proceeds.}

\item{\code{Ops(e1,e2)} - lists}{If the non-unitbundle is a list, the
operation is performed on the unitbundle and each element of the list.}

\item{e1^e2}{If e1 is a unitbundle and e2 is numeric, the units in e1 are 
raised to the power in e2.}

}

}
}

